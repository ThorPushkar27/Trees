TC = O(3N)
SC = O(4N)


vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    vector<int>pre;
    vector<int>post;
    vector<int>inorder;
    vector<vector<int>>ans;
    stack<pair<BinaryTreeNode<int> *,int>>st;
    st.push({root,1});
    //if(root==NULL) return {};
    while(st.empty()==false){
        auto it = st.top();
        st.pop();
        if(it.second == 1){
            pre.push_back(it.first->data);
            ans.push_back(pre);
            it.second++;
            st.push(it);
            if(it.first->left!=NULL){
                st.push({it.first->left,1});
            }
        }
        else if(it.second==2){
            inorder.push_back(it.first->data);
            ans.push_back(inorder);
            it.second++;
            st.push(it);
            if(it.first->right!=NULL){
                st.push({it.first->right,1});
            }
        }
        else{
            post.push_back(it.first->data);
            ans.push_back(post);
        }
        return ans;
    }

    // Write your code here.
}
